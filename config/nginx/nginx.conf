user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /mnt/d/warsztat/web/roll4.it/config/nginx/mime.types;
	default_type dumbass/didnt-set.mime+type;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	# gzip on;
	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	server {
        server_name  roll4.it;

        gzip  on;
        gzip_types      text/html application/javascript text/css application/json application/manifest+json text/cache-manifest application/leaflet.map application/roll4it.chunk font/ttf font/otf;
        gzip_proxied    no-cache no-store private expired auth;
        gzip_min_length 1000;
        gunzip on;

        location / {
            root /mnt/d/warsztat/web/roll4.it/static;
            index index.html index.htm;
            autoindex on;
        }

        location /comm {
            proxy_pass http://127.0.0.1:81;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

		listen [::]:443 ssl ipv6only=on; # managed by Certbot
	    listen 443 ssl; # managed by Certbot
	    ssl_certificate /etc/letsencrypt/live/roll4.it/fullchain.pem; # managed by Certbot
	    ssl_certificate_key /etc/letsencrypt/live/roll4.it/privkey.pem; # managed by Certbot
	    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

	server {
	    if ($host = roll4.it) {
	        return 301 https://$host$request_uri;
	    } # managed by Certbot


		listen 80 ;
		listen [::]:80 ;
	    server_name roll4.it;
	    return 404; # managed by Certbot
	}
}
